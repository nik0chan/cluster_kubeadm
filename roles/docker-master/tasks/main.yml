---
- name: Check packages installed on system 
  package_facts: 
    manager: "auto"

- name: Set system hostname
  hostname:
    name: master

- name: Ensure module br_netfilter is present
  modprobe:
    name: br_netfilter
    state: present

- name: Create /etc/sysctl.d/k8s.conf
  file:
    path: /etc/sysctl.d/k8s.conf
    owner: root
    group: root
    mode: '0644'
    state: touch

#- name: Let iptables see bridged traffic
#  blockinfile:
#    dest: /etc/sysctl.d/k8s.conf
#    state: present
#    block: |
#      net.bridge.bridge-nf-call-ip6tables = 1'
#      net.bridge.bridge-nf-call-iptables = 1'

#- name: Reload sysctl  
#  command: /usr/sbin/sysctl --system 

- name: Check for Centos tasks
  import_tasks: tasks/debian.yml 
  when: (ansible_facts['distribution'] == "RedHat")

- name: Check for Debian tasks
  import_tasks: tasks/debian.yml 
  when: (ansible_facts['distribution'] == "Debian")

- name: Ensure lines in sysctl 
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1
    sysctl_set: yes
    reload: yes
- name: Ensure lines in sysctl
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    sysctl_set: yes
    reload: yes

# Configurar firewall !!!!!

- name: Get kubectl stable release
  get_url: 
    url: https://storage.googleapis.com/kubernetes-release/release/stable.txt
    dest: /tmp/kubectl_version
 
- name: Read variable
  command: cat /tmp/kubectl_version
  register: kubectl_version 

- name: Install kubectl 
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/{{kubectl_version.stdout}}/bin/linux/amd64/kubectl"
    dest: /usr/local/bin/kubectl 
    mode: 0755
    owner: root 
    group: root

- name: Install Kubeadm packages
  package: 
    name:
      - kubeadm
      - kubectl
      - kubelet
    state: latest

#- name: Install Docker
#  shell: curl https://get.docker.com |sudo bash

- name: Start docker service
  service:
    name: docker
    state: started

- name: Disable SWAP 
  shell: |
    swapoff -a

- name: Disable SWAP in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Kubernetes setup
  file:
    path: /root/.kube
    state: directory

- name: Copy file with owner and permissions
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: true
    owner: root
    group: root
    mode: '0600'

- name: Deploy cilium network driver
  command: /usr/bin/kubectl create -f {{network_driver}}

